#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
######
###### This config file is a demonstration of streaming processing in seatunnel config
######

env {
  spark.app.name = "SeaTunnel"
  spark.executor.instances = 2
  spark.executor.cores = 1
  spark.executor.memory = "1g"
  spark.master = local
  job.mode = "BATCH"
}

source {
  Iceberg {
    schema {
      fields {
        f2 = "boolean"
        f1 = "bigint"
        f3 = "int"
        f4 = "bigint"
        f5 = "float"
        f6 = "double"
        f7 = "date"
        f9 = "timestamp"
        f10 = "timestamp"
        f11 = "string"
        f12 = "bytes"
        f13 = "bytes"
        f14 = "decimal(19,9)"
        f15 = "array<int>"
        f16 = "map<string, int>"
      }
    }
    catalog_name = "seatunnel"
    iceberg.catalog.config={
      "type"="hadoop"
      "warehouse"="s3a://test-bucket/tmp/seatunnel/iceberg/s3/"
    }
    hadoop.config={
      "fs.s3a.path.style.access" = "true"
      "fs.s3a.connection.ssl.enabled" = "false"
      "fs.s3a.signing.algorithm" = "S3SignerType"
      "fs.s3a.encryption.algorithm" = "AES256"
      "fs.s3a.connection.timeout" = "3000"
      "fs.s3a.impl.disable.cache" = "true"
      "fs.s3a.attempts.maximum" = "1"
      "fs.s3a.aws.credentials.provider" = "org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider"
      "fs.s3a.endpoint" = "http://minio:9000"
      "fs.s3a.access.key" = "minioadmin"
      "fs.s3a.secret.key" = "minioadmin"
      "fs.defaultFS" = "s3a://test-bucket"
    }
    namespace = "database1"
    table = "source"
    result_table_name = "iceberg"
  }
}

transform {
}

sink {
  Assert {
    source_table_name = "iceberg"
    rules = {
      field_rules = [
        {
          field_name = f1
          field_type = bigint
          field_value = [
            {
              rule_type = NOT_NULL
            },
            {
              rule_type = MIN
              rule_value = 0
            },
            {
              rule_type = MAX
              rule_value = 99
            }
          ]
        }
      ]
    }
  }
}